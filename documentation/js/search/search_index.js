var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.085,1,0.933]],["body/components/AppComponent.html",[0,1.866,1,1.48,2,2.249,3,0.749,4,0.749,5,1.971,6,1.971,7,1.971,8,1.971,9,0.638,10,1.971,11,1.971,12,2.769,13,2.458,14,3.412,15,2.249,16,3.901,17,2.249,18,3.412,19,0.538,20,1.202,21,1.628,22,4.202,23,1.183,24,2.48,25,4.553,26,1.861,27,3.412,28,1.017,29,0.06,30,1.178,31,0.538,32,0.749,33,2.48,34,1.017,35,1.635,36,1.384,37,1.183,38,1.48,39,1.375,40,0.638,41,1.971,42,1.971,43,1.971,44,1.971,45,1.971,46,1.971,47,1.017,48,1.384,49,1.183,50,1.971,51,0.749,52,0.749,53,1.183,54,2.48,55,2.48,56,2.48,57,2.48,58,2.48,59,1.183,60,3.412,61,2.48,62,2.48,63,2.48,64,1.971,65,2.711,66,2.711,67,1.971,68,3.338,69,1.971,70,1.971,71,1.635,72,1.971,73,1.971,74,0.039,75,0.039]],["title/modules/AppModule.html",[76,2.103,77,1.477]],["body/modules/AppModule.html",[1,1.739,3,0.72,4,0.72,9,0.613,29,0.06,38,1.585,39,1.477,40,0.613,49,1.138,50,1.894,51,1.003,52,0.72,74,0.038,75,0.038,77,2.834,78,1.571,79,1.852,80,1.894,81,1.894,82,1.894,83,1.894,84,1.358,85,1.358,86,1.929,87,1.157,88,2.638,89,1.894,90,1.571,91,1.571,92,2.638,93,2.638,94,3.32,95,2.638,96,3.035,97,3.32,98,3.32,99,3.32,100,1.894,101,1.571,102,3.32,103,1.894,104,2.384,105,3.32,106,2.384,107,1.571,108,1.571,109,2.384,110,1.571,111,3.32,112,1.894,113,0.977,114,1.894,115,1.33,116,2.384,117,2.384,118,1.894,119,1.894,120,2.638,121,2.384,122,1.571,123,2.384,124,2.384,125,1.894,126,1.894]],["title/injectables/DatabaseService.html",[84,0.799,127,0.799]],["body/injectables/DatabaseService.html",[3,0.695,4,0.695,9,0.592,19,0.499,21,1.545,23,1.098,26,1.545,28,1.536,29,0.06,30,1.228,31,0.93,32,1.228,34,1.327,36,1.283,37,1.098,39,1.228,40,0.592,47,0.943,51,0.695,52,0.695,53,1.098,59,1.098,74,0.037,75,0.037,84,0.978,87,1.046,113,1.823,115,1.807,127,0.978,128,1.283,129,1.516,130,1.788,131,3.238,132,2.3,133,2.3,134,2.68,135,2.573,136,2.269,137,2.68,138,2.091,139,2.3,140,2.573,141,2.573,142,2.573,143,2.573,144,2.573,145,1.828,146,3.533,147,2.134,148,2.573,149,2.269,150,2.573,151,2.573,152,2.573,153,2.573,154,1.807,155,2.573,156,2.573,157,2.573,158,1.098,159,0.943,160,1.283,161,1.516,162,0.81,163,1.828,164,2.573,165,1.516,166,1.828,167,2.18,168,1.828,169,1.828,170,1.807,171,1.828,172,2.573,173,1.828,174,1.098,175,1.828,176,1.516,177,1.828,178,2.573,179,1.828,180,1.516,181,2.134,182,1.516,183,1.828]],["title/injectables/DetailService.html",[85,0.799,127,0.799]],["body/injectables/DetailService.html",[3,0.832,4,0.832,9,0.708,19,0.598,20,1.291,21,1.748,23,1.964,26,2.287,28,1.502,29,0.06,30,1.106,31,0.952,32,1.106,34,1.798,35,2.414,37,2.093,39,0.832,40,0.708,51,0.832,52,0.832,74,0.042,75,0.042,85,1.106,115,2.044,127,1.106,128,1.537,184,2.188,185,2.62,186,4.116,187,4.116,188,4.387,189,4.387,190,3.663,191,3.663,192,3.663,193,2.755,194,3.33,195,2.755,196,2.755,197,2.755,198,2.755,199,2.755,200,2.755,201,2.755,202,3.663,203,2.755,204,3.663]],["title/components/HomeComponent.html",[0,1.085,38,0.933]],["body/components/HomeComponent.html",[0,0.81,1,0.306,2,0.987,3,0.262,4,0.262,5,0.689,6,0.689,7,0.689,8,0.689,9,0.223,11,0.689,12,1.549,13,1.312,15,0.987,17,0.987,19,0.188,20,0.528,21,0.715,23,0.414,26,2.12,28,1.275,29,0.061,30,1.24,31,0.876,32,0.939,34,1.592,35,1.749,36,1.312,37,1.122,38,0.935,39,1.114,40,0.385,47,0.614,48,0.484,49,0.414,51,0.262,52,0.262,53,0.414,59,0.414,64,0.689,65,1.19,66,1.19,67,0.689,68,1.868,69,0.689,70,0.689,71,1.302,72,0.689,73,0.689,74,0.017,75,0.017,84,0.71,85,0.71,87,0.605,107,0.572,108,0.572,110,0.572,113,0.356,130,2.152,138,2.458,149,1.919,154,1.102,158,0.414,159,0.356,160,0.484,162,0.306,167,2.167,170,1.834,174,0.943,185,1.102,194,1.549,205,0.572,206,1.19,207,1.57,208,1.57,209,1.57,210,1.19,211,2.733,212,2.471,213,2.306,214,1.619,215,1.57,216,1.57,217,1.57,218,1.57,219,1.868,220,2.471,221,1.498,222,2.612,223,1.498,224,1.498,225,1.868,226,1.868,227,1.868,228,1.868,229,1.498,230,1.498,231,1.498,232,0.868,233,1.57,234,1.57,235,1.868,236,1.498,237,1.19,238,0.868,239,0.868,240,1.19,241,0.868,242,1.498,243,0.868,244,1.19,245,1.57,246,1.57,247,1.57,248,0.868,249,0.868,250,1.19,251,0.868,252,0.868,253,0.868,254,0.868,255,0.868,256,1.19,257,1.749,258,0.868,259,1.19,260,0.868,261,1.19,262,0.868,263,1.57,264,0.868,265,0.868,266,0.868,267,0.868,268,0.868,269,1.57,270,0.868,271,1.19,272,0.868,273,0.868,274,0.868,275,0.689,276,0.689,277,0.689,278,0.689,279,0.689,280,1.57,281,0.689,282,0.689,283,2.471,284,1.19,285,1.302,286,1.19,287,1.19,288,0.689,289,0.689,290,1.19,291,2.612,292,2.838,293,3.012,294,1.57,295,1.19,296,0.689,297,2.108,298,1.19,299,2.733,300,1.19,301,0.689,302,1.19,303,0.689,304,1.19,305,1.19,306,1.19,307,0.689,308,0.689,309,0.689,310,0.689,311,0.689,312,0.689,313,0.689,314,0.689,315,0.689,316,0.689,317,0.689,318,0.689,319,1.19,320,0.689,321,1.868,322,1.19,323,0.689,324,0.689,325,0.689,326,1.868,327,0.689,328,0.689,329,0.689,330,0.689,331,0.689,332,1.57,333,0.689,334,0.689,335,0.689,336,0.689,337,0.689,338,0.689,339,0.689,340,0.689,341,1.19,342,0.689,343,0.689,344,0.689,345,0.689,346,0.689,347,1.19,348,0.689,349,0.689,350,0.689,351,1.57,352,1.19,353,1.19,354,1.498,355,1.498,356,1.498,357,1.498,358,1.498,359,1.498,360,2.351,361,1.498,362,0.868,363,2.654,364,1.498,365,0.868,366,2.654,367,0.868,368,1.498,369,0.868,370,0.868,371,1.498,372,1.498,373,1.498,374,1.976,375,0.868,376,0.868,377,1.976,378,0.868,379,1.498,380,1.498,381,0.868,382,0.868,383,1.498,384,0.868,385,1.498,386,0.868,387,1.976,388,1.498,389,0.868,390,0.868,391,0.868,392,0.868,393,0.868,394,0.868,395,0.868,396,0.868,397,0.868,398,0.868,399,0.868,400,0.868,401,0.868,402,0.689,403,0.868]],["title/injectables/InitializeAppService.html",[86,1.085,127,0.799]],["body/injectables/InitializeAppService.html",[3,0.952,4,0.952,9,0.811,19,0.684,21,1.908,23,1.908,26,1.908,28,1.293,29,0.06,30,0.952,31,0.684,32,0.952,34,1.293,39,1.208,40,0.811,51,0.952,52,0.952,74,0.045,75,0.045,86,1.639,87,1.253,127,1.208,128,1.759,130,2.096,147,2.078,161,2.078,165,2.078,167,1.908,180,2.078,181,2.636,182,2.078,185,1.759,404,2.505,405,4.619,406,3.153,407,3.153,408,3.153,409,3.153,410,3.153,411,3.153,412,3.153,413,3.153,414,3.153]],["title/interfaces/SQLiteDBConnectionCallback.html",[136,1.477,162,0.933]],["body/interfaces/SQLiteDBConnectionCallback.html",[3,0.792,4,0.792,9,0.675,19,0.569,20,1.249,29,0.06,30,0.792,31,0.569,32,0.792,34,1.453,39,1.299,40,0.675,47,1.075,51,0.792,52,0.792,53,1.252,59,1.252,74,0.04,75,0.04,84,0.792,87,0.912,113,1.646,115,1.978,127,1.071,129,1.729,130,1.252,134,2.337,135,2.084,136,2.24,137,2.337,138,1.464,140,2.817,141,2.084,142,2.084,143,2.084,144,2.084,146,3.19,147,1.729,148,2.084,149,2.4,150,2.084,151,2.084,152,2.084,153,2.084,154,1.464,155,2.084,156,2.084,157,2.084,158,1.252,159,1.075,160,1.464,161,1.729,162,0.924,163,2.817,164,2.817,165,1.729,166,2.084,167,2.259,168,2.084,169,2.084,170,1.978,171,2.084,172,2.817,173,2.084,174,1.252,175,2.084,176,1.729,177,2.084,178,2.817,179,2.084,180,1.729,181,2.337,182,1.729,183,2.084,415,1.729,416,2.623,417,2.623,418,2.623]],["title/coverage.html",[419,2.834]],["body/coverage.html",[0,1.624,1,1.094,9,0.799,10,2.468,29,0.059,31,0.674,38,1.094,74,0.045,75,0.045,84,0.938,85,0.938,86,1.273,87,0.799,91,2.047,113,1.273,122,2.047,127,1.387,129,2.611,136,1.733,159,1.624,162,1.396,184,2.468,205,2.611,214,1.733,285,2.047,402,4.036,404,2.468,419,2.468,420,2.468,421,3.106,422,3.106,423,3.962,424,4.594,425,3.106,426,3.106,427,3.106,428,3.106,429,3.106,430,3.106,431,3.106,432,3.106,433,3.106,434,2.468,435,4.362,436,2.468,437,2.468,438,2.468,439,2.468,440,3.106,441,3.106]],["title/dependencies.html",[79,1.769,442,1.774]],["body/dependencies.html",[29,0.06,40,0.75,41,2.317,42,3.362,43,3.564,44,2.317,45,3.021,46,2.317,47,1.195,48,1.627,49,1.391,74,0.043,75,0.043,79,1.627,100,3.021,101,2.506,103,2.317,112,2.317,134,1.922,158,1.391,443,2.916,444,4.771,445,2.916,446,2.916,447,2.916,448,2.916,449,3.803,450,3.803,451,3.564,452,2.916,453,4.859,454,2.916,455,2.916,456,2.916,457,2.916,458,2.916,459,2.916,460,2.916,461,2.317,462,2.916,463,2.916,464,2.916,465,2.916,466,2.916,467,2.916,468,2.916,469,2.916,470,2.317,471,2.916,472,2.916,473,2.916,474,2.916,475,2.916,476,2.916,477,2.916]],["title/miscellaneous/functions.html",[478,1.246,479,2.519]],["body/miscellaneous/functions.html",[19,0.838,28,1.584,29,0.054,30,1.167,31,0.838,32,1.167,74,0.051,75,0.051,86,1.856,91,2.546,114,3.069,122,2.984,478,2.155,479,3.069,480,3.864,481,3.864]],["title/index.html",[19,0.484,482,1.774,483,1.774]],["body/index.html",[29,0.053,74,0.053,75,0.053]],["title/license.html",[482,1.774,483,1.774,484,1.472]],["body/license.html",[29,0.044,74,0.044,75,0.044,90,1.977,257,1.977,420,2.383,484,1.977,485,3,486,4.29,487,3,488,3,489,3,490,3,491,3,492,3.874,493,3,494,3,495,3,496,3,497,3,498,3,499,3.874,500,5.009,501,3,502,3,503,3,504,4.29,505,3,506,3.874,507,3,508,3,509,3.874,510,3,511,3,512,3,513,3,514,3,515,3,516,3,517,3.874,518,3,519,3,520,3,521,3,522,3,523,3,524,3,525,3.874,526,3.874,527,3,528,3,529,3,530,3,531,3,532,3,533,3,534,3,535,3,536,3,537,3,538,3,539,3,540,3,541,3,542,3,543,3,544,3,545,3,546,3,547,3,548,3,549,3,550,3,551,3,552,3,553,3,554,3,555,3]],["title/interfaces/listdata.html",[162,0.933,214,1.477]],["body/interfaces/listdata.html",[0,0.887,3,0.407,4,0.407,9,0.347,12,0.889,13,0.752,15,0.889,17,0.889,19,0.293,20,0.762,29,0.061,30,1.094,31,0.588,32,0.653,38,0.762,39,1.292,40,0.556,47,0.887,48,0.752,49,0.643,51,0.407,52,0.407,53,0.643,59,0.643,71,0.889,74,0.025,75,0.025,84,0.653,85,0.653,87,0.556,107,0.889,108,0.889,110,0.889,113,0.553,130,1.948,138,2.561,149,2.277,154,0.752,158,0.643,159,0.553,160,0.752,162,0.475,167,2.334,170,2.207,174,1.032,185,1.511,194,2.237,205,0.889,206,1.071,207,1.719,208,1.719,209,1.071,210,1.071,211,2.152,212,2.696,213,3.024,214,1.729,215,1.071,216,1.071,217,1.071,218,1.071,219,1.071,220,1.719,222,2.152,225,1.071,226,1.071,227,1.071,228,1.071,233,1.071,234,1.071,235,1.719,237,1.071,240,1.071,244,1.071,245,1.071,246,1.071,247,1.071,250,1.071,256,1.071,257,1.426,259,1.071,261,1.071,263,1.719,269,1.719,271,1.071,275,1.071,276,1.071,277,1.071,278,1.071,279,1.071,280,2.878,281,1.071,282,1.071,283,3.024,284,1.719,285,1.426,286,1.719,287,1.719,288,1.071,289,1.071,290,1.719,291,3.143,292,3.327,293,3.462,294,2.152,295,1.719,296,1.071,297,2.696,298,1.719,299,3.243,300,1.719,301,1.071,302,1.719,303,1.071,304,1.719,305,1.719,306,1.719,307,1.071,308,1.071,309,1.071,310,1.071,311,1.071,312,1.071,313,1.071,314,1.071,315,1.071,316,1.071,317,1.071,318,1.071,319,1.719,320,1.071,321,2.463,322,1.719,323,1.071,324,1.071,325,1.071,326,2.463,327,1.071,328,1.071,329,1.071,330,1.071,331,1.071,332,2.152,333,1.071,334,1.071,335,1.071,336,1.071,337,1.071,338,1.071,339,1.071,340,1.071,341,1.719,342,1.071,343,1.071,344,1.071,345,1.071,346,1.071,347,1.719,348,1.071,349,1.071,350,1.071,351,2.152,352,1.719,353,1.719,415,0.889]],["title/modules.html",[78,2.351]],["body/modules.html",[29,0.052,74,0.052,75,0.052,77,2.238,78,2.644,101,2.644,556,4.012,557,4.012,558,4.012]],["title/overview.html",[559,2.834]],["body/overview.html",[1,1.76,2,2.17,29,0.058,38,1.578,74,0.047,75,0.047,76,2.615,77,2.921,79,2.293,80,2.615,81,2.615,82,2.615,83,2.615,84,1.353,85,1.353,86,1.836,87,1.152,88,3.265,89,2.615,90,2.17,128,1.837,176,2.17,415,2.17,559,2.615,560,4.11,561,3.292]],["title/properties.html",[20,1.117,442,1.774]],["body/properties.html",[20,1.376,29,0.059,74,0.052,75,0.052,145,3.104,451,3.104,484,2.575,562,3.907,563,3.907,564,3.907]],["title/miscellaneous/variables.html",[478,1.246,565,2.519]],["body/miscellaneous/variables.html",[1,1.104,13,1.749,19,0.68,29,0.06,31,0.95,36,2.444,37,2.09,74,0.045,75,0.045,85,1.203,87,1.025,92,2.49,93,2.49,95,2.49,96,2.49,118,2.49,119,2.49,120,3.48,125,2.49,126,3.48,137,2.626,159,1.889,174,1.495,434,2.49,436,2.49,437,2.49,438,3.165,439,3.165,461,2.49,470,2.49,478,1.749,565,2.49,566,3.134,567,3.134,568,3.134,569,4.38,570,3.984,571,3.134,572,3.134,573,3.984]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"interfaces/listdata.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":176,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"overview.html":{}}}],["1.6.2",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["100vw",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["14.0.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":345,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["18px",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":560,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["2020",{"_index":488,"title":{},"body":{"license.html":{}}}],["20px",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["27/39",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":561,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":451,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["40px",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.36.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["5.44.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["50px",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["56px",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.1.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["666666",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["69",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["_detailservice",{"_index":233,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["_existingconn",{"_index":186,"title":{},"body":{"injectables/DetailService.html":{}}}],["_exportjson",{"_index":187,"title":{},"body":{"injectables/DetailService.html":{}}}],["_ref",{"_index":234,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["_sqlite",{"_index":237,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["above",{"_index":524,"title":{},"body":{"license.html":{}}}],["action",{"_index":549,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["add",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["addcategory",{"_index":219,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["afterviewinit",{"_index":208,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["alert(\"erst",{"_index":308,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["align",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["and/or",{"_index":515,"title":{},"body":{"license.html":{}}}],["angular",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/common",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"dependencies.html":{},"interfaces/listdata.html":{}}}],["angular/forms",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["another",{"_index":153,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.exitapp",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":77,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":553,"title":{},"body":{"license.html":{}}}],["associated",{"_index":501,"title":{},"body":{"license.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["author",{"_index":564,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":542,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":144,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["awesome",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bernommen",{"_index":340,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["between",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":194,"title":{},"body":{"injectables/DetailService.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":558,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["buch",{"_index":322,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["button",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["c",{"_index":487,"title":{},"body":{"license.html":{}}}],["callback",{"_index":146,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["callback(db",{"_index":172,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["cancel",{"_index":220,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["capacitor",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"dependencies.html":{},"interfaces/listdata.html":{}}}],["capacitor.config",{"_index":279,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["capacitor.getplatform",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["capacitor/android",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"interfaces/listdata.html":{}}}],["capacitor/dialog",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["capacitor/filesystem",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["capacitor/toast",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["capacitorplatform",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":180,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["category",{"_index":343,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["category.categoryname",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryname",{"_index":211,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categoryname=\"${categoryname",{"_index":332,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categoryname=\"${data.categoryname",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categoryname=\"${newcategory",{"_index":331,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categoryname=\"${this.categoryname",{"_index":300,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categorys",{"_index":212,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["categorys(categoryname",{"_index":287,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["cb",{"_index":178,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["center",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["changedetectorref",{"_index":235,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["charge",{"_index":496,"title":{},"body":{"license.html":{}}}],["claim",{"_index":545,"title":{},"body":{"license.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["clearinterval(this.timeout",{"_index":346,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["clickoncheckbox",{"_index":221,"title":{},"body":{"components/HomeComponent.html":{}}}],["clickoncheckbox(data",{"_index":240,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["cluster_appmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{}}}],["commands",{"_index":150,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["comment",{"_index":213,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["comment=\"${data.comment",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["comment='${selectedcomment",{"_index":325,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["commit",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["community/sqlite",{"_index":158,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"dependencies.html":{},"interfaces/listdata.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["component_template",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["conditions",{"_index":523,"title":{},"body":{"license.html":{}}}],["config",{"_index":278,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["configs.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":222,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["confirm(\"löschen",{"_index":320,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["confirm('delete",{"_index":342,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["connection",{"_index":554,"title":{},"body":{"license.html":{}}}],["console.log((await",{"_index":290,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["console.log(this",{"_index":282,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["const",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{}}}],["constructor(_sqlite",{"_index":232,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(platform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["constructor(sqlite",{"_index":132,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(sqliteservice",{"_index":406,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["content",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["contract",{"_index":550,"title":{},"body":{"license.html":{}}}],["copies",{"_index":517,"title":{},"body":{"license.html":{}}}],["copy",{"_index":499,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":486,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["coverage",{"_index":419,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom_elements_schema",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["customevent",{"_index":314,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["damages",{"_index":546,"title":{},"body":{"license.html":{}}}],["data",{"_index":242,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.comment",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.finished",{"_index":347,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["data.name",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{}}}],["database",{"_index":154,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["databasename",{"_index":137,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"miscellaneous/variables.html":{}}}],["databaseservice",{"_index":84,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{},"overview.html":{}}}],["datacomment",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{}}}],["dataname",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["db",{"_index":170,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["db.open",{"_index":177,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["db.query('create",{"_index":284,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["db.query('select",{"_index":295,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["db.query(`delete",{"_index":321,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["db.query(`insert",{"_index":304,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["db.query(`select",{"_index":291,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["db.query(`update",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["deal",{"_index":503,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":555,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["decoration",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["decorators",{"_index":270,"title":{},"body":{"components/HomeComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{}}}],["delete",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletecategory",{"_index":341,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["deleteline",{"_index":223,"title":{},"body":{"components/HomeComponent.html":{}}}],["deleteline(selectedname",{"_index":244,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["deletelistitem",{"_index":224,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletelistitem(data",{"_index":250,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["deletequestion",{"_index":319,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["dependencies",{"_index":79,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":145,"title":{},"body":{"injectables/DatabaseService.html":{},"properties.html":{}}}],["detailservice",{"_index":85,"title":{"injectables/DetailService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["directives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["display",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["distribute",{"_index":513,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":420,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["dynamic",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["eine",{"_index":309,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["element",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["elements",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["encryption",{"_index":175,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["entrycomponents",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":159,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{},"miscellaneous/variables.html":{}}}],["environment.databasename",{"_index":152,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["error",{"_index":181,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["error(`databaseserviceerror",{"_index":183,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["error(`initializeapperror",{"_index":414,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["ev",{"_index":313,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["ev.detail.data",{"_index":318,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["ev.detail.role",{"_index":315,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["event",{"_index":257,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{},"interfaces/listdata.html":{}}}],["execute",{"_index":147,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["executequery",{"_index":131,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["executequery(callback",{"_index":135,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["exists",{"_index":286,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["express",{"_index":533,"title":{},"body":{"license.html":{}}}],["fab",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{}}}],["false",{"_index":174,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["files",{"_index":502,"title":{},"body":{"license.html":{}}}],["finished",{"_index":280,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["finished=\"${data.finished",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["fitness",{"_index":538,"title":{},"body":{"license.html":{}}}],["flex",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["following",{"_index":522,"title":{},"body":{"license.html":{}}}],["font",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["formsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":495,"title":{},"body":{"license.html":{}}}],["function",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["functions",{"_index":479,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":520,"title":{},"body":{"license.html":{}}}],["getexistingconnection",{"_index":188,"title":{},"body":{"injectables/DetailService.html":{}}}],["getexportjson",{"_index":189,"title":{},"body":{"injectables/DetailService.html":{}}}],["getting",{"_index":482,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":494,"title":{},"body":{"license.html":{}}}],["green",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{}}}],["grey",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["h2",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle",{"_index":141,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["header",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["hello",{"_index":317,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["hereby",{"_index":493,"title":{},"body":{"license.html":{}}}],["hinzufügen",{"_index":311,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["holders",{"_index":543,"title":{},"body":{"license.html":{}}}],["home",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["home.component.html",{"_index":210,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["home.component.scss",{"_index":209,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["home/home.component",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["homecomponent",{"_index":38,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{},"overview.html":{}}}],["homepage",{"_index":563,"title":{},"body":{"properties.html":{}}}],["html",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["identifier",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["if(this.categorys[0",{"_index":302,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["implements",{"_index":206,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["implied",{"_index":534,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["included",{"_index":527,"title":{},"body":{"license.html":{}}}],["including",{"_index":506,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"miscellaneous/functions.html":{},"interfaces/listdata.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["init",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["init.initializeapp",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp",{"_index":405,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["initializeappservice",{"_index":86,"title":{"injectables/InitializeAppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InitializeAppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["initializefactory",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializefactory(init",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["injectable",{"_index":127,"title":{"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"injectables/InitializeAppService.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"injectables/InitializeAppService.html":{},"overview.html":{}}}],["interface",{"_index":162,"title":{"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["interfaces",{"_index":415,"title":{},"body":{"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{},"overview.html":{}}}],["ion",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{}}}],["ionic",{"_index":461,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["ionic/angular",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"interfaces/listdata.html":{}}}],["ionic/core/components",{"_index":277,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["ionic/pwa",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule.forroot",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ionicroutestrategy",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["ionmodal",{"_index":269,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["isclosed",{"_index":143,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["isconnection",{"_index":166,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["isconnection.result",{"_index":169,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["isopen",{"_index":142,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["jean",{"_index":490,"title":{},"body":{"license.html":{}}}],["jeep",{"_index":470,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["kategory",{"_index":310,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["kind",{"_index":532,"title":{},"body":{"license.html":{}}}],["legend",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["liability",{"_index":547,"title":{},"body":{"license.html":{}}}],["liable",{"_index":544,"title":{},"body":{"license.html":{}}}],["license",{"_index":484,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":507,"title":{},"body":{"license.html":{}}}],["limited",{"_index":535,"title":{},"body":{"license.html":{}}}],["line",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{}}}],["linethrough",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":292,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["list(categoryname",{"_index":288,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["listdata",{"_index":214,"title":{"interfaces/listdata.html":{}},"body":{"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["margin",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["matching",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"interfaces/listdata.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":537,"title":{},"body":{"license.html":{}}}],["merge",{"_index":511,"title":{},"body":{"license.html":{}}}],["message",{"_index":215,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{}}}],["miscellaneous",{"_index":478,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":485,"title":{},"body":{"license.html":{}}}],["modal",{"_index":216,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["modify",{"_index":510,"title":{},"body":{"license.html":{}}}],["module",{"_index":76,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":78,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["mousedown",{"_index":217,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["mouseup",{"_index":225,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["multi",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":148,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["myarguments",{"_index":163,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"miscellaneous/functions.html":{},"interfaces/listdata.html":{}}}],["name=\"${data.name",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["name='${selectedname",{"_index":323,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["native/splash",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["newcategory",{"_index":326,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["ngafterviewinit",{"_index":226,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["ngmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":227,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["nicht",{"_index":338,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["nodejs.timeout",{"_index":281,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["noninfringement",{"_index":541,"title":{},"body":{"license.html":{}}}],["notice",{"_index":525,"title":{},"body":{"license.html":{}}}],["notizen",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":328,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["number",{"_index":246,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["object",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":498,"title":{},"body":{"license.html":{}}}],["ohne",{"_index":335,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["oninit",{"_index":207,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["onsegmentchange",{"_index":228,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["onwilldismiss",{"_index":229,"title":{},"body":{"components/HomeComponent.html":{}}}],["onwilldismiss(event",{"_index":256,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"miscellaneous/functions.html":{},"interfaces/listdata.html":{}}}],["otherwise",{"_index":552,"title":{},"body":{"license.html":{}}}],["out",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["overlayeventdetail",{"_index":276,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["overview",{"_index":559,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":442,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["page='${selectedpage",{"_index":324,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["param",{"_index":164,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":539,"title":{},"body":{"license.html":{}}}],["permission",{"_index":492,"title":{},"body":{"license.html":{}}}],["permit",{"_index":518,"title":{},"body":{"license.html":{}}}],["person",{"_index":497,"title":{},"body":{"license.html":{}}}],["persons",{"_index":519,"title":{},"body":{"license.html":{}}}],["pierre",{"_index":491,"title":{},"body":{"license.html":{}}}],["platform",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["plugins/core",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["plugins/splash",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["plugins/status",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["portions",{"_index":529,"title":{},"body":{"license.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/listdata.html":{}}}],["production",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":155,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["prompt",{"_index":327,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{},"properties.html":{}}}],["property",{"_index":417,"title":{},"body":{"interfaces/SQLiteDBConnectionCallback.html":{}}}],["provide",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":530,"title":{},"body":{"license.html":{}}}],["providers",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":512,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":540,"title":{},"body":{"license.html":{}}}],["queries",{"_index":412,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["quéau",{"_index":489,"title":{},"body":{"license.html":{}}}],["receive",{"_index":157,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["removecategory",{"_index":230,"title":{},"body":{"components/HomeComponent.html":{}}}],["removecategory(categoryname",{"_index":259,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["reset",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restriction",{"_index":505,"title":{},"body":{"license.html":{}}}],["results",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"interfaces/listdata.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":410,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["return",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["returns",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["rights",{"_index":508,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["routereusestrategy",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["schemas",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["segmentmousedown",{"_index":231,"title":{},"body":{"components/HomeComponent.html":{}}}],["segmentmousedown(categoryname",{"_index":261,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["selectedcomment",{"_index":247,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["selectedname",{"_index":249,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectedpage",{"_index":245,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["sell",{"_index":516,"title":{},"body":{"license.html":{}}}],["services/database.service",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["services/detail.service",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["services/initialize.app.service",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sqlite.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["set",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["setexistingconnection",{"_index":190,"title":{},"body":{"injectables/DetailService.html":{}}}],["setexistingconnection(value",{"_index":196,"title":{},"body":{"injectables/DetailService.html":{}}}],["setexistingconnection(value:boolean",{"_index":201,"title":{},"body":{"injectables/DetailService.html":{}}}],["setexportjson",{"_index":191,"title":{},"body":{"injectables/DetailService.html":{}}}],["setexportjson(value",{"_index":198,"title":{},"body":{"injectables/DetailService.html":{}}}],["setexportjson(value:boolean",{"_index":203,"title":{},"body":{"injectables/DetailService.html":{}}}],["setstatusbaroverlaywebview",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(async",{"_index":334,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["shall",{"_index":526,"title":{},"body":{"license.html":{}}}],["signature",{"_index":418,"title":{},"body":{"interfaces/SQLiteDBConnectionCallback.html":{}}}],["size",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["software",{"_index":500,"title":{},"body":{"license.html":{}}}],["sonst",{"_index":336,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["space",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["sqlite",{"_index":134,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"dependencies.html":{}}}],["sqlite.service",{"_index":161,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["sqlitedbconnection",{"_index":149,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["sqlitedbconnectioncallback",{"_index":136,"title":{"interfaces/SQLiteDBConnectionCallback.html":{}},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{}}}],["sqliteservice",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"interfaces/listdata.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../testbed",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/home/home.component.ts",{"_index":205,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["src/app/home/home.component.ts:103",{"_index":238,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:116",{"_index":255,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:124",{"_index":260,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:141",{"_index":262,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:151",{"_index":252,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:155",{"_index":241,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:169",{"_index":251,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":267,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":274,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":266,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:33",{"_index":268,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:35",{"_index":265,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:36",{"_index":264,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:38",{"_index":273,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":236,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:46",{"_index":254,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:48",{"_index":253,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:66",{"_index":272,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:68",{"_index":239,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:71",{"_index":243,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:86",{"_index":258,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:93",{"_index":248,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/database.service.ts",{"_index":129,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{}}}],["src/app/services/database.service.ts:20",{"_index":139,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:9",{"_index":133,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/detail.service.ts",{"_index":184,"title":{},"body":{"injectables/DetailService.html":{},"coverage.html":{}}}],["src/app/services/detail.service.ts:10",{"_index":197,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/detail.service.ts:13",{"_index":193,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/detail.service.ts:16",{"_index":199,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/detail.service.ts:19",{"_index":195,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/detail.service.ts:5",{"_index":200,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/detail.service.ts:6",{"_index":192,"title":{},"body":{"injectables/DetailService.html":{}}}],["src/app/services/initialize.app.service.ts",{"_index":404,"title":{},"body":{"injectables/InitializeAppService.html":{},"coverage.html":{}}}],["src/app/services/initialize.app.service.ts:13",{"_index":408,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["src/app/services/initialize.app.service.ts:8",{"_index":407,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["src/app/services/sqlite.service.ts",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment",{"_index":160,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["src/environments/environment.prod.ts",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testbed",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":483,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":411,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["statements",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["statusbar",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["statusbar.overlayswebview(false",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":138,"title":{},"body":{"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"interfaces/listdata.html":{}}}],["string,name",{"_index":289,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["stuff",{"_index":151,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["subject",{"_index":521,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":514,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":528,"title":{},"body":{"license.html":{}}}],["support",{"_index":556,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":557,"title":{},"body":{"modules.html":{}}}],["t",{"_index":140,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["table",{"_index":285,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"interfaces/listdata.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["test",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testbedbase",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._existingconn",{"_index":202,"title":{},"body":{"injectables/DetailService.html":{}}}],["this._exportjson",{"_index":204,"title":{},"body":{"injectables/DetailService.html":{}}}],["this.cancel",{"_index":312,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.categoryname",{"_index":297,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.categorys",{"_index":294,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.categorys.push",{"_index":329,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.categorys[0",{"_index":263,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.categorys[0].categoryname",{"_index":298,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.comment",{"_index":306,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.database.executequery(async",{"_index":283,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.listdata",{"_index":299,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.message",{"_index":316,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.migrationservice.migrate",{"_index":413,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["this.modal.dismiss(null",{"_index":301,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.modal.dismiss(this.name",{"_index":303,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.name",{"_index":305,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.onsegmentchange",{"_index":307,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.platform.backbutton.subscribewithpriority",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then(async",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["this.removecategory(categoryname",{"_index":344,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["this.setstatusbaroverlaywebview",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sqlite.closeconnection(databasename",{"_index":179,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["this.sqlite.createconnection(databasename",{"_index":173,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["this.sqlite.isconnection(databasename",{"_index":168,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["this.sqlite.retrieveconnection(databasename",{"_index":171,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["this.sqliteservice.initializeplugin().then(async",{"_index":409,"title":{},"body":{"injectables/InitializeAppService.html":{}}}],["this.timeout",{"_index":333,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["through",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["throw",{"_index":182,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["timeout",{"_index":218,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["title",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["top",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["tort",{"_index":551,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["true",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":165,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["tslib",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["txt",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"injectables/InitializeAppService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/listdata.html":{},"miscellaneous/variables.html":{}}}],["unamed",{"_index":416,"title":{},"body":{"interfaces/SQLiteDBConnectionCallback.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["urlserializer",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":509,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":293,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["values('${newcategory",{"_index":330,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["var",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["variable",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":565,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":562,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":275,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["viewchild(ionmodal",{"_index":271,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/DetailService.html":{},"components/HomeComponent.html":{}}}],["von",{"_index":339,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["want",{"_index":156,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SQLiteDBConnectionCallback.html":{}}}],["warranties",{"_index":536,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":531,"title":{},"body":{"license.html":{}}}],["web",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["whether",{"_index":548,"title":{},"body":{"license.html":{}}}],["width",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["wird",{"_index":337,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/listdata.html":{}}}],["without",{"_index":504,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setStatusBarOverlayWebView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setStatusBarOverlayWebView\n                        \n                    \n                \n            \n            \n                \nsetStatusBarOverlayWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HomeComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { StatusBar } from '@awesome-cordova-plugins/status-bar';\nimport { App } from '@capacitor/app';\nimport { Capacitor } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\n\nimport { HomeComponent } from './home/home.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  component = HomeComponent;\n\n  constructor(private platform: Platform) {\n    this.platform.ready().then(async () => {\n      this.platform.backButton.subscribeWithPriority(\n        666666, () => {\n          App.exitApp();\n        });\n\n      this.setStatusBarOverlayWebView();\n    });\n  }\n\n  setStatusBarOverlayWebView() {\n    const capacitorPlatform = Capacitor.getPlatform();\n\n    if (capacitorPlatform !== \"web\") {\n      StatusBar.overlaysWebView(false);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n-->\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nDetailService\n\nDetailService\n\nAppModule -->\n\nDetailService->AppModule\n\n\n\n\n\nInitializeAppService\n\nInitializeAppService\n\nAppModule -->\n\nInitializeAppService->AppModule\n\n\n\n\n\nSQLiteService\n\nSQLiteService\n\nAppModule -->\n\nSQLiteService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                        \n                            DetailService\n                        \n                        \n                            InitializeAppService\n                        \n                        \n                            SQLiteService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { SQLiteService } from './services/sqlite.service';\nimport { DetailService } from './services/detail.service';\nimport { InitializeAppService } from './services/initialize.app.service';\n\nimport { DatabaseService } from './services/database.service';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\n\n\nexport function initializeFactory(init: InitializeAppService) {\n  return () => init.initializeApp();\n}\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  entryComponents: [],\n  imports: [BrowserModule, IonicModule.forRoot(), FormsModule],\n  providers: [\n    SQLiteService,\n    DetailService,\n    DatabaseService,\n    InitializeAppService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeFactory,\n      deps: [InitializeAppService],\n      multi: true\n    },\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                executeQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sqlite: SQLiteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sqlite\n                                                  \n                                                        \n                                                                        SQLiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        executeQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeQuery(callback: SQLiteDBConnectionCallback, databaseName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/database.service.ts:20\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    this function will handle the sqlite isopen and isclosed automatically for you.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                SQLiteDBConnectionCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : The callback function that will execute multiple SQLiteDBConnection commands or other stuff.\n\n                                    \n                                \n                                \n                                    databaseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        environment.databaseName\n                                    \n\n                                    \n                                        optional another database name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        any type you want to receive from the callback function.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SQLiteDBConnection } from '@capacitor-community/sqlite';\nimport { environment } from 'src/environments/environment';\nimport { SQLiteService } from './sqlite.service';\n\ninterface SQLiteDBConnectionCallback { (myArguments: SQLiteDBConnection): T }\n\n@Injectable()\nexport class DatabaseService {\n\n  constructor(private sqlite: SQLiteService) {\n  }\n\n  /**\n   * this function will handle the sqlite isopen and isclosed automatically for you.\n   * @param callback: The callback function that will execute multiple SQLiteDBConnection commands or other stuff.\n   * @param databaseName optional another database name\n   * @returns any type you want to receive from the callback function.\n   */\n  async executeQuery(callback: SQLiteDBConnectionCallback, databaseName: string = environment.databaseName): Promise {\n    try {\n      let isConnection = await this.sqlite.isConnection(databaseName);\n\n      if (isConnection.result) {\n        let db = await this.sqlite.retrieveConnection(databaseName);\n        return await callback(db);\n      }\n      else {\n        const db = await this.sqlite.createConnection(databaseName, false, \"no-encryption\", 1);\n        await db.open();\n        let cb = await callback(db);\n        await this.sqlite.closeConnection(databaseName);\n        return cb;\n      }\n    } catch (error) {\n      throw Error(`DatabaseServiceError: ${error}`);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailService.html":{"url":"injectables/DetailService.html","title":"injectable - DetailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _existingConn\n                            \n                            \n                                    Private\n                                _exportJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExistingConnection\n                            \n                            \n                                getExportJson\n                            \n                            \n                                setExistingConnection\n                            \n                            \n                                setExportJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detail.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExistingConnection\n                        \n                    \n                \n            \n            \n                \ngetExistingConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/detail.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExportJson\n                        \n                    \n                \n            \n            \n                \ngetExportJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/detail.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExistingConnection\n                        \n                    \n                \n            \n            \n                \nsetExistingConnection(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/detail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExportJson\n                        \n                    \n                \n            \n            \n                \nsetExportJson(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/detail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _existingConn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detail.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _exportJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detail.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n@Injectable()\n\nexport class DetailService {\n    private _existingConn: boolean;\n    private _exportJson: boolean;\n\n    constructor() {\n    }\n    setExistingConnection(value:boolean) {\n        this._existingConn = value;\n    }\n    getExistingConnection(): boolean {\n        return this._existingConn;\n    }\n    setExportJson(value:boolean) {\n        this._exportJson = value;\n    }\n    getExportJson(): boolean {\n        return this._exportJson;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryname\n                            \n                            \n                                categorys\n                            \n                            \n                                comment\n                            \n                            \n                                listdata\n                            \n                            \n                                message\n                            \n                            \n                                modal\n                            \n                            \n                                mousedown\n                            \n                            \n                                name\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCategory\n                            \n                            \n                                cancel\n                            \n                            \n                                    Async\n                                clickOnCheckbox\n                            \n                            \n                                    Async\n                                confirm\n                            \n                            \n                                    Async\n                                deleteLine\n                            \n                            \n                                    Async\n                                deleteListItem\n                            \n                            \n                                mouseUp\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSegmentChange\n                            \n                            \n                                onWillDismiss\n                            \n                            \n                                    Async\n                                removeCategory\n                            \n                            \n                                segmentMousedown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_sqlite: SQLiteService, _detailService: DetailService, _ref: ChangeDetectorRef, database: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sqlite\n                                                  \n                                                        \n                                                                        SQLiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _detailService\n                                                  \n                                                        \n                                                                        DetailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCategory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clickOnCheckbox\n                        \n                    \n                \n            \n            \n                \n                    \n                    clickOnCheckbox(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLine(selectedname: string, selectedpage: number, selectedcomment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedpage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedcomment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteListItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListItem(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseUp\n                        \n                    \n                \n            \n            \n                \nmouseUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onSegmentChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSegmentChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWillDismiss\n                        \n                    \n                \n            \n            \n                \nonWillDismiss(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCategory(categoryname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentMousedown\n                        \n                    \n                \n            \n            \n                \nsegmentMousedown(categoryname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.categorys[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listdata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         listdata[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonModal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IonModal)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mousedown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { IonModal } from '@ionic/angular';\nimport { OverlayEventDetail } from '@ionic/core/components';\n\nimport { Capacitor } from '@capacitor/core';\nimport { DetailService } from '../services/detail.service';\nimport { SQLiteService } from '../services/sqlite.service';\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport config from 'capacitor.config';\nimport { environment } from 'src/environments/environment';\n\nimport { DatabaseService } from '../services/database.service';\nimport { SQLiteDBConnection } from '@capacitor-community/sqlite';\n\ninterface listdata {\n  name: string;\n  finished: boolean;\n  comment?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n  listdata: listdata[] = [];\n\n  name: string;\n  comment: string;\n  message: string;\n\n  categorys: any[] = [];\n  categoryname: string = this.categorys[0];\n\n  mousedown: boolean = false;\n  timeout: any;         //NodeJS.Timeout;\n\n  constructor(private _sqlite: SQLiteService,\n    private _detailService: DetailService,\n    private _ref: ChangeDetectorRef,\n    private database: DatabaseService) { }\n\n  ngOnInit() { }\n\n  async ngAfterViewInit() {\n    //console.log(this);\n\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query('CREATE TABLE IF NOT EXISTS categorys(categoryname string);', [])\n      await db.query('CREATE TABLE IF NOT EXISTS list(categoryname string,name string, finished boolean, comment string);', [])\n\n      //console.log((await db.query(`SELECT * FROM list`, [])).values);\n      //console.log((await db.query(`SELECT * FROM categorys`, [])).values);\n\n      this.categorys = (await db.query('SELECT * FROM categorys ', [])).values\n      if (this.categorys[0] !== undefined) {\n        this.categoryname = this.categorys[0].categoryname;\n        this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${this.categoryname}\" `, [])).values;\n      }\n    })\n  }\n\n  @ViewChild(IonModal) modal: IonModal;\n\n  cancel() {\n    this.modal.dismiss(null, 'cancel');\n  };\n  async confirm() {\n    if(this.categorys[0]){\n      this.modal.dismiss(this.name, 'confirm');\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`INSERT INTO list (categoryname, name, finished, comment) VALUES ('${this.categoryname}', '${this.name}', false, '${this.comment}');`, [])\n        await this.onSegmentChange();\n      })\n      this.name = \"\";\n      this.comment = \"\";\n    }\n    else {\n      alert(\"Erst eine Kategory hinzufügen\")\n      this.cancel();\n    }\n  };\n  onWillDismiss(event: Event) {\n    const ev = event as CustomEvent>;\n    if (ev.detail.role === 'confirm') {\n      this.message = `Hello, ${ev.detail.data}!`;\n    }\n  };\n\n  async deleteLine(selectedname: string, selectedpage: number, selectedcomment: string) {\n    let deletequestion = confirm(\"Löschen?\");\n    if (deletequestion) {\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`DELETE FROM buch WHERE name='${selectedname}' AND page='${selectedpage}' AND comment='${selectedcomment}';`, [])\n        this.listdata = (await db.query('SELECT * FROM buch', [])).values\n      })\n    }\n  };\n\n  async addCategory() {\n    let newCategory = prompt();\n    if (newCategory !== null) {\n      this.categorys.push({ \"categoryname\": newCategory });\n\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`INSERT INTO categorys(categoryname) VALUES('${newCategory}');`, [])\n        this.categoryname = newCategory;\n        this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${newCategory}\"`, [])).values\n      })\n    }\n  };\n\n  async onSegmentChange() {\n    this.listdata = [];\n\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${this.categoryname}\"`, [])).values\n    })\n  };\n\n  async removeCategory(categoryname) {\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query(`DELETE FROM categorys WHERE categoryname=\"${categoryname}\"`, [])\n      await db.query(`DELETE FROM list WHERE categoryname=\"${categoryname}\"`, [])\n      this.categorys = [];\n      this.categorys = (await db.query(`SELECT * FROM categorys`, [])).values\n      if(this.categorys[0]){\n        this.categoryname = this.categorys[0].categoryname;\n      }\n      else{\n        this.categoryname = \"\";\n      }\n      this.listdata = [];\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${categoryname}\"`, [])).values\n    })\n  };\n\n  segmentMousedown(categoryname: string) {\n    this.timeout = setTimeout(async () => {       //ohne function, sonst wird this nicht von homeComponent übernommen\n        let deleteCategory = confirm('delete category')\n        if (deleteCategory) {\n          await this.removeCategory(categoryname);\n        }\n      \n    }, 1500);\n  }\n\n  mouseUp() {\n    clearInterval(this.timeout);\n  }\n\n  async clickOnCheckbox(data: any){    \n    //data.finished != data.finished;  (async (db: SQLiteDBConnection) => {\n      (await db.query(`UPDATE list SET finished=\"${data.finished}\" WHERE categoryname=\"${data.categoryname}\" AND name=\"${data.name}\" AND comment=\"${data.comment}\"`, [])).values\n    })\n  };\n\n  async deleteListItem(data: any){\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query(`DELETE FROM list WHERE categoryname=\"${data.categoryname}\" AND name=\"${data.name}\" AND comment=\"${data.comment}\"`, [])\n      this.listdata = [];\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${data.categoryname}\"`, [])).values\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Notizen\n            \n                \n                    \n                \n            \n            -->\n        \n\n        \n            \n                 {{ category.categoryname }} \n            \n        \n    \n\n\n\n     {{ categoryname }}\n\n    \n        \n            \n                \n                \n                    \n                        {{ data.name }}\n                    \n                     {{ data.comment }} \n                \n            \n\n            \n                Delete\n            \n        \n    \n\n\n\n    +\n\n    \n    \n        \n            \n                \n                    \n                        Cancel\n                    \n                    Add Line\n                    \n                        Confirm\n                    \n                \n            \n            \n                \n                    name\n                    \n                \n\n                \n                    Commit\n                    \n                \n            \n        \n\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                body {\n    margin-top: 56px;\n}\n\nion-header {\n    .title {\n        width: 100vw;\n        display: flex;\n        justify-content: space-between;\n    }\n    ion-title {\n        margin: 20px;\n    }\n    ion-fab {\n        margin-bottom: 20px;\n        color: green;\n    }\n}\n\nion-content {\n    h2 {\n        text-align: center;\n        margin-bottom: 40px;\n    }\n    .table {\n        font-size: 18px;\n        .txt-lineThrough {\n            text-decoration-line: line-through;\n        }\n        .dataName {\n            font-size: 20px;\n            font-weight: 900;\n        }\n        .dataComment {\n            color: grey;\n        }\n    }\n    ion-button {\n        margin-top: 50px;\n        display: flex;\n        justify-content: center;\n        padding: 0 10px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Notizen                                                                                        -->                                             {{ category.categoryname }}                              {{ categoryname }}                                                                                                    {{ data.name }}                                         {{ data.comment }}                                                         Delete                            +                                                                                        Cancel                                        Add Line                                            Confirm                                                                                                name                                                                        Commit                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitializeAppService.html":{"url":"injectables/InitializeAppService.html","title":"injectable - InitializeAppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitializeAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/initialize.app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sqliteService: SQLiteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/initialize.app.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sqliteService\n                                                  \n                                                        \n                                                                        SQLiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeApp\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/initialize.app.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SQLiteService } from './sqlite.service';\n\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class InitializeAppService {\n\n  constructor(\n    private sqliteService: SQLiteService) { }\n\n  async initializeApp() {\n    await this.sqliteService.initializePlugin().then(async (ret) => {\n      try {\n        //execute startup queries\n        //await this.migrationService.migrate();\n\n      } catch (error) {\n        throw Error(`initializeAppError: ${error}`);\n      }\n\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SQLiteDBConnectionCallback.html":{"url":"interfaces/SQLiteDBConnectionCallback.html","title":"interface - SQLiteDBConnectionCallback","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SQLiteDBConnectionCallback\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [myArguments: SQLiteDBConnection]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     T\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SQLiteDBConnection } from '@capacitor-community/sqlite';\nimport { environment } from 'src/environments/environment';\nimport { SQLiteService } from './sqlite.service';\n\ninterface SQLiteDBConnectionCallback { (myArguments: SQLiteDBConnection): T }\n\n@Injectable()\nexport class DatabaseService {\n\n  constructor(private sqlite: SQLiteService) {\n  }\n\n  /**\n   * this function will handle the sqlite isopen and isclosed automatically for you.\n   * @param callback: The callback function that will execute multiple SQLiteDBConnection commands or other stuff.\n   * @param databaseName optional another database name\n   * @returns any type you want to receive from the callback function.\n   */\n  async executeQuery(callback: SQLiteDBConnectionCallback, databaseName: string = environment.databaseName): Promise {\n    try {\n      let isConnection = await this.sqlite.isConnection(databaseName);\n\n      if (isConnection.result) {\n        let db = await this.sqlite.retrieveConnection(databaseName);\n        return await callback(db);\n      }\n      else {\n        const db = await this.sqlite.createConnection(databaseName, false, \"no-encryption\", 1);\n        await db.open();\n        let cb = await callback(db);\n        await this.sqlite.closeConnection(databaseName);\n        return cb;\n      }\n    } catch (error) {\n      throw Error(`DatabaseServiceError: ${error}`);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            initializeFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            interface\n            listdata\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            SQLiteDBConnectionCallback\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/detail.service.ts\n            \n            injectable\n            DetailService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/initialize.app.service.ts\n            \n            injectable\n            InitializeAppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/sqlite.service.ts\n            \n            injectable\n            SQLiteService\n            \n                69 %\n                (27/39)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testbed-configs.ts\n            \n            variable\n            testbedBase\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            @awesome-cordova-plugins/core : ^6.1.0\n        \n            @awesome-cordova-plugins/splash-screen : ^5.44.0\n        \n            @awesome-cordova-plugins/status-bar : ^5.44.0\n        \n            @capacitor-community/sqlite : ^4.2.0\n        \n            @capacitor/android : 4.2.0\n        \n            @capacitor/app : ^4.0.0\n        \n            @capacitor/core : ^4.2.0\n        \n            @capacitor/dialog : ^4.0.0\n        \n            @capacitor/filesystem : ^4.0.0\n        \n            @capacitor/haptics : ^4.0.0\n        \n            @capacitor/ios : ^4.2.0\n        \n            @capacitor/keyboard : ^4.0.0\n        \n            @capacitor/status-bar : ^4.0.0\n        \n            @capacitor/toast : ^4.0.0\n        \n            @ionic-native/splash-screen : ^5.36.0\n        \n            @ionic/angular : ^6.1.9\n        \n            @ionic/pwa-elements : ^3.1.1\n        \n            cordova-plugin-statusbar : ^3.0.0\n        \n            jeep-sqlite : ^1.6.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initializeFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeFactory\n                        \n                    \n                \n            \n            \n                \ninitializeFactory(init: InitializeAppService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    init\n                                    \n                                                InitializeAppService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Quéau Jean Pierre\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/listdata.html":{"url":"interfaces/listdata.html","title":"interface - listdata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  listdata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/home.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            finished\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        finished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { IonModal } from '@ionic/angular';\nimport { OverlayEventDetail } from '@ionic/core/components';\n\nimport { Capacitor } from '@capacitor/core';\nimport { DetailService } from '../services/detail.service';\nimport { SQLiteService } from '../services/sqlite.service';\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport config from 'capacitor.config';\nimport { environment } from 'src/environments/environment';\n\nimport { DatabaseService } from '../services/database.service';\nimport { SQLiteDBConnection } from '@capacitor-community/sqlite';\n\ninterface listdata {\n  name: string;\n  finished: boolean;\n  comment?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n  listdata: listdata[] = [];\n\n  name: string;\n  comment: string;\n  message: string;\n\n  categorys: any[] = [];\n  categoryname: string = this.categorys[0];\n\n  mousedown: boolean = false;\n  timeout: any;         //NodeJS.Timeout;\n\n  constructor(private _sqlite: SQLiteService,\n    private _detailService: DetailService,\n    private _ref: ChangeDetectorRef,\n    private database: DatabaseService) { }\n\n  ngOnInit() { }\n\n  async ngAfterViewInit() {\n    //console.log(this);\n\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query('CREATE TABLE IF NOT EXISTS categorys(categoryname string);', [])\n      await db.query('CREATE TABLE IF NOT EXISTS list(categoryname string,name string, finished boolean, comment string);', [])\n\n      //console.log((await db.query(`SELECT * FROM list`, [])).values);\n      //console.log((await db.query(`SELECT * FROM categorys`, [])).values);\n\n      this.categorys = (await db.query('SELECT * FROM categorys ', [])).values\n      if (this.categorys[0] !== undefined) {\n        this.categoryname = this.categorys[0].categoryname;\n        this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${this.categoryname}\" `, [])).values;\n      }\n    })\n  }\n\n  @ViewChild(IonModal) modal: IonModal;\n\n  cancel() {\n    this.modal.dismiss(null, 'cancel');\n  };\n  async confirm() {\n    if(this.categorys[0]){\n      this.modal.dismiss(this.name, 'confirm');\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`INSERT INTO list (categoryname, name, finished, comment) VALUES ('${this.categoryname}', '${this.name}', false, '${this.comment}');`, [])\n        await this.onSegmentChange();\n      })\n      this.name = \"\";\n      this.comment = \"\";\n    }\n    else {\n      alert(\"Erst eine Kategory hinzufügen\")\n      this.cancel();\n    }\n  };\n  onWillDismiss(event: Event) {\n    const ev = event as CustomEvent>;\n    if (ev.detail.role === 'confirm') {\n      this.message = `Hello, ${ev.detail.data}!`;\n    }\n  };\n\n  async deleteLine(selectedname: string, selectedpage: number, selectedcomment: string) {\n    let deletequestion = confirm(\"Löschen?\");\n    if (deletequestion) {\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`DELETE FROM buch WHERE name='${selectedname}' AND page='${selectedpage}' AND comment='${selectedcomment}';`, [])\n        this.listdata = (await db.query('SELECT * FROM buch', [])).values\n      })\n    }\n  };\n\n  async addCategory() {\n    let newCategory = prompt();\n    if (newCategory !== null) {\n      this.categorys.push({ \"categoryname\": newCategory });\n\n      await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n        await db.query(`INSERT INTO categorys(categoryname) VALUES('${newCategory}');`, [])\n        this.categoryname = newCategory;\n        this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${newCategory}\"`, [])).values\n      })\n    }\n  };\n\n  async onSegmentChange() {\n    this.listdata = [];\n\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${this.categoryname}\"`, [])).values\n    })\n  };\n\n  async removeCategory(categoryname) {\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query(`DELETE FROM categorys WHERE categoryname=\"${categoryname}\"`, [])\n      await db.query(`DELETE FROM list WHERE categoryname=\"${categoryname}\"`, [])\n      this.categorys = [];\n      this.categorys = (await db.query(`SELECT * FROM categorys`, [])).values\n      if(this.categorys[0]){\n        this.categoryname = this.categorys[0].categoryname;\n      }\n      else{\n        this.categoryname = \"\";\n      }\n      this.listdata = [];\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${categoryname}\"`, [])).values\n    })\n  };\n\n  segmentMousedown(categoryname: string) {\n    this.timeout = setTimeout(async () => {       //ohne function, sonst wird this nicht von homeComponent übernommen\n        let deleteCategory = confirm('delete category')\n        if (deleteCategory) {\n          await this.removeCategory(categoryname);\n        }\n      \n    }, 1500);\n  }\n\n  mouseUp() {\n    clearInterval(this.timeout);\n  }\n\n  async clickOnCheckbox(data: any){    \n    //data.finished != data.finished;  (async (db: SQLiteDBConnection) => {\n      (await db.query(`UPDATE list SET finished=\"${data.finished}\" WHERE categoryname=\"${data.categoryname}\" AND name=\"${data.name}\" AND comment=\"${data.comment}\"`, [])).values\n    })\n  };\n\n  async deleteListItem(data: any){\n    await this.database.executeQuery(async (db: SQLiteDBConnection) => {\n      await db.query(`DELETE FROM list WHERE categoryname=\"${data.categoryname}\" AND name=\"${data.name}\" AND comment=\"${data.comment}\"`, [])\n      this.listdata = [];\n      this.listdata = (await db.query(`SELECT * FROM list WHERE categoryname=\"${data.categoryname}\"`, [])).values\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nDetailService\n\nDetailService\n\nAppModule -->\n\nDetailService->AppModule\n\n\n\n\n\nInitializeAppService\n\nInitializeAppService\n\nAppModule -->\n\nInitializeAppService->AppModule\n\n\n\n\n\nSQLiteService\n\nSQLiteService\n\nAppModule -->\n\nSQLiteService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 4.2.0\n        \n            Description : \n        \n            Homepage : ./\n        \n            License : \n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            testbedBase   (src/.../testbed-configs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  databaseName: 'test',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  databaseName: 'jeep-app-ionic-angular',\n}\n                    \n                \n\n\n        \n    \n\n    src/testbed-configs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        testbedBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  declarations: [AppComponent],\n  providers: [\n    { provide: SQLiteService, useClass: SQLiteService },\n    { provide: DetailService, useClass: DetailService },\n    { provide: UrlSerializer, useClass: UrlSerializer },\n  ],\n  imports: [IonicModule.forRoot()],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
